version: '3.9'
services:
  postgres:
    image: postgis/postgis:16-3.4
    environment:
      POSTGRES_USER: unify
      POSTGRES_PASSWORD: unify
      POSTGRES_DB: unify
    ports:
      - 4335:5432
    volumes:
      - ./files/init.sql:/docker-entrypoint-initdb.d/init.sql
      - datomic-storage-data:/var/lib/postgresql/data
    networks:
      - datomic-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "unify"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always


  transactor:
    image: datomic:1.0.7075-java17 
    build: 
      context: ./images/transactor/
      dockerfile: Dockerfile
    ports:
      - 4334:4334
    volumes:
      - datomic-transactor-logs:/opt/datomic/logs
    configs:
      - transactor.properties
    networks:
      - datomic-network
    healthcheck:
      test: ["CMD", "curl", "http://localhost:9999/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
    restart: always
    depends_on:
      postgres:
        condition: service_healthy

  query-service:
    image: vendekagonlabs/datomic-query-service
    environment:
      BASE_DATOMIC_URI: datomic:sql://?jdbc:postgresql://postgres:4335/unify?user=unify&password=unify
      BEARER_TOKEN: "dev"
    healthcheck:
      test: ["CMD", "curl", "http://localhost:80/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
    restart: always
    networks:
      - datomic-network
    ports:
      - 8988:80
    depends_on:
      postgres:
        condition: service_healthy
      transactor:
        condition: service_healthy

  schema-browser:
    image: vendekagonlabs/unify-schema-browser
    networks:
      - datomic-network
    ports:
      - 8899:80 
    environment:
      BASE_DATOMIC_URI: datomic:sql://?jdbc:postgresql://postgres:4335/unify?user=unify&password=unify
      SERVICE_PORT: 80
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8899/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      transactor:
        condition: service_healthy


configs:
  transactor.properties:
    file: ./files/sql-transactor.properties

networks:
  datomic-network:
    driver: bridge

volumes:
  datomic-storage-data:
  datomic-transactor-logs:
