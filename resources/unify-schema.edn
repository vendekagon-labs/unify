[
 ;; Unify high level schema metadata
 {:db/ident       :unify.schema/name
  :db/valueType   :db.type/keyword
  :db/unique      :db.unique/identity
  :db/cardinality :db.cardinality/one
  :db/doc         "The name/identifier for this particular Unify schema, use of namespace in keyword encouraged."}
 {:db/ident       :unify.schema/version
  :db/valueType   :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc         "The version of this particular Unify schema (in x.x.x format)"}
 {:db/ident :unify.schema/metadata
  :db/doc   "The Schema Metadata singleton. Used to find name and version of the Unify schema."}

 ;; Import annotation data (links between import files and transactions)
 {:db/ident       :unify.annotation/entity
  :db/valueType   :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc         "Entity to which this annotation refers."}
 {:db/ident       :unify.annotation/filename
  :db/valueType   :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc         "Filename where entity was sourced from."}
 {:db/ident       :unify.annotation/line-number
  :db/valueType   :db.type/long
  :db/cardinality :db.cardinality/one
  :db/doc         "The line number in the file that this entity was sourced from"}
 {:db/ident       :unify.import/most-recent
  :db/valueType   :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc         "The most recent import to alter this entity."}


 ;; Metamodel attributes:
 {:db/ident       :unify.kind/name
  :db/valueType   :db.type/keyword
  :db/unique      :db.unique/identity
  :db/cardinality :db.cardinality/one
  :db/doc         "Name of a kind of entity in the system"}

 {:db/ident       :unify.kind/context-id
  :db/valueType   :db.type/keyword
  :db/cardinality :db.cardinality/one
  :db/doc         "Locally identifying attribute, must be a domain schema attribute"}

 {:db/ident       :unify.kind/global-id
  :db/valueType   :db.type/keyword
  :db/cardinality :db.cardinality/one
  :db/doc         "A unique ID attribute that does not need to be generated or scoped by Unify."}

 {:db/ident       :unify.kind/parent
  :db/valueType   :db.type/keyword
  :db/cardinality :db.cardinality/one
  :db/doc         ":kind/name of the parent (containing) entity"}

 {:db/ident       :unify.kind/need-uid
  :db/valueType   :db.type/keyword
  :db/cardinality :db.cardinality/one
  :db/doc         "attr name that stores the synthetic UID for this kind of entity"}

 ;; infer matrix blob kind from presence of storage key, data type
 {:db/ident       :unify.kind.matrix-blob/storage-key-attribute
  :db/valueType   :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc         "Indicates which attribute for the matrix blob entity in question is used to store the
                     backing file."}

 {:db/ident       :unify.kind.matrix-blob/data-type-attribute
  :db/valueType   :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc         "Indicates which attribute for the matrix blob entity in question is used to store the data
                     type attribute."}

 {:db/ident       :unify.kind/synthetic-composite-id
  :db/valueType   :db.type/keyword
  :db/cardinality :db.cardinality/one
  :db/doc         "ID attribute that will be given the value of a synthetic composite ID computed by Unify."}

 {:db/ident       :unify.kind/synthetic-composite-components
  :db/valueType   :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/isComponent true
  :db/doc         "Logically an indexed list of the components of the synthetic ID (see attrs in this namespace)"}

 {:db/ident       :unify.kind.synthetic-composite-id/index
  :db/valueType   :db.type/long
  :db/cardinality :db.cardinality/one
  :db/doc         "The list index (order) in which this component appears in the composite ID."}

 {:db/ident       :unify.kind.synthetic-composite-id/attribute
  :db/valueType   :db.type/keyword
  :db/cardinality :db.cardinality/one
  :db/doc         "The attribute which provides the value for this component of the composite ID."}


 {:db/ident       :unify.kind/allow-create-on-import
  :db/valueType   :db.type/boolean
  :db/cardinality :db.cardinality/one
  :db/doc         "tag indicating that this particular ref data can be created during an import"}

 {:db/ident       :unify.kind/ref-data
  :db/valueType   :db.type/boolean
  :db/cardinality :db.cardinality/one
  :db/doc         "tag indicating that this kind of entity is ref-data"}

 {:db/ident       :unify.ref/from
  :db/valueType   :db.type/keyword
  :db/cardinality :db.cardinality/one
  :db/doc         "source of a ref attribute, must be a :kind/name"}

 {:db/ident       :unify.ref/to
  :db/valueType   :db.type/keyword
  :db/cardinality :db.cardinality/one
  :db/doc         "target of a ref attribute, must be a :kind/name"}

 {:db/ident       :import/unify-version
  :db/valueType   :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc         "The version of unify used to import this entity."}

 {:db/ident       :import/schema-version
  :db/valueType   :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc         "The schema version under which this import was completed."}


 ;; Similar to :db/tupleTypes but allows unify kinds
 {:db/ident       :unify.ref/tuple-types
  :db/valueType   :db.type/tuple
  :db/tupleType   :db.type/keyword
  :db/cardinality :db.cardinality/one
  :db/doc         "vector of tuple element types for a tuple attribute, each element is either a kind keyword or a primitive type keyword"}]
